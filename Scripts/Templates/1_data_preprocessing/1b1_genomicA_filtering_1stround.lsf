#!/usr/bin/bash

#BSUB -W 24:00
#BSUB -n 32
#BSUB -M 300
#BSUB -R rusage[mem=300]
#BSUB -o /home/bnle/bsub_jobs/output/runname_1b1_genomicA_filtering_1stround_samplename.%J.out
#BSUB -e /home/bnle/bsub_jobs/error/runname_1b1_genomicA_filtering_1stround_samplename.%J.err
#BSUB -q e40medium
#BSUB -J runname_1b1_genomicA_filtering_1stround_samplename
#BSUB -u bnle@mdanderson.org
#BSUB -B
#BSUB -N

source activate scPASU_env

# Variable
dir=dirpath
clean_bam_dir=${dir}/1a2_clean_bam/
filter_dir=${dir}/1b_filtered_bam/
sample=samplename
WORKING_DIR=polyAfilterpath
FASTA=fastapath
GTF=gtfpath
BAM=${clean_bam_dir}${sample}_dedup_uniq.bam
BAM_FILTERED1=${filter_dir}${sample}_dedup_uniq_filtered_1stround.bam
BAM_FILTERED2=${filter_dir}${sample}_dedup_uniq_filtered_2ndround.bam
DB=${filter_dir}gtfdb.db
TRANS_INTRON=${filter_dir}${sample}_trans_intron.pkl
TRANS_NOINTRON=${filter_dir}${sample}_trans_nointron.pkl

# Argument
MISM=3
NTHREADS=32
COVLEN=300
MINSNRLEN=10

## Filter genomicA reads ##

# SCRIPT
cd $WORKING_DIR

# 1st round
# Create the TRANS file including intronic coverage
echo 'Create the TRANS file including intronic coverage...'
python polyAfilter.py createTRANS -i $DB $BAM $TRANS_INTRON

# Filter the BAM file
echo 'Filter out the genomicA reads including intronic coverage...'
python polyAfilter.py BAMfilter -m $MISM -i -v -p $NTHREADS $COVLEN $MINSNRLEN $BAM $FASTA $TRANS_INTRON -o $BAM_FILTERED1
echo 'Indexing the last bam file...'
samtools index $BAM_FILTERED1
